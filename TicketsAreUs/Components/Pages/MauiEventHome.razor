@inject IOccasionService occasionService
@inject ITicketService ticketService
@inject HttpClient httpClient
@inject SyncDatabase syncData

@page "/"
@using RazorClassLib.Data
@using RazorClassLib.Services
@using TicketsAreUs.Data

<RazorClassLib.Components.EventHome></RazorClassLib.Components.EventHome>

@code{
    private List<Ticket> MauiTickets { get; set; } = new List<Ticket>();
    private List<Occasion> MauiOccasions { get; set; } = new List<Occasion>();
    private List<Ticket> OnlineTickets { get; set; } = new List<Ticket>();
    private List<Occasion> OnlineOccasions { get; set; } = new List<Occasion>();

    private string api { get; set; } = "";
    private bool isOnline { get; set; } = true;
    private int ticks { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GetPreferences();
        MauiOccasions = await occasionService.GetAllOccasions();
        MauiTickets = await ticketService.GetAllTickets();

        OnlineTickets = await httpClient.GetFromJsonAsync<List<Ticket>>($"{api}/Ticket");
        OnlineOccasions = await httpClient.GetFromJsonAsync<List<Occasion>>($"{api}/Occasion");

        await syncData.SyncAll(OnlineTickets, OnlineOccasions, ticks);
    }

    public void GetPreferences()
    {
        api = Preferences.Default.Get("API", "");
        if (api == "https://localhost:7257" || api == "")
        {
            api = Preferences.Default.Get("API", "https://localhost:7257");
            Preferences.Default.Set("NetworkStatus", isOnline);
            ticks = Preferences.Default.Get("refresh", 5);
        }
        else
        {
            api = Preferences.Default.Get("API", "https://ticketsareus.azurewebsites.net");
            Preferences.Default.Set("NetworkStatus", isOnline);
            ticks = Preferences.Default.Get("refresh", 5);
        }
    }
}